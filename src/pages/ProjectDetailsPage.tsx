import React from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { projectsData } from '../data/projectsData';
import './ProjectDetailsPage.scss';

// Mapping des technologies vers leurs ic√¥nes
const getTechIcon = (tech: string): string => {
  const techIcons: Record<string, string> = {
    // Languages de programmation
    'JavaScript': 'üü®',
    'TypeScript': 'üî∑',
    'Python': 'üêç',
    'Java': '‚òï',
    'PHP': 'üêò',
    'C': '‚öôÔ∏è',
    'C++': '‚ö°',
    'C#': 'üî∑',
    'Go': 'üêπ',
    'Rust': 'ü¶Ä',
    'Ruby': 'üíé',
    'Swift': 'üçé',
    'Kotlin': 'üü©',
    'Dart': 'üéØ',
    
    // Frontend
    'HTML': 'üåê',
    'CSS': 'üé®',
    'React': '‚öõÔ∏è',
    'Vue': 'üíö',
    'Angular': 'üÖ∞Ô∏è',
    'Svelte': 'üî•',
    'Next.js': '‚ñ≤',
    'Nuxt.js': 'üíö',
    'Gatsby': 'üü£',
    'Vite': '‚ö°',
    
    // Backend & Frameworks
    'Node.js': 'üíö',
    'Express': 'üöÇ',
    'Django': 'üé∏',
    'Flask': 'üå∂Ô∏è',
    'Spring': 'üå±',
    'Laravel': 'üü†',
    'Symfony': 'üéº',
    'FastAPI': 'üöÄ',
    'NestJS': 'üêà',
    
    // Base de donn√©es
    'MySQL': 'üê¨',
    'PostgreSQL': 'üêò',
    'MongoDB': 'üçÉ',
    'SQLite': 'üíø',
    'Redis': 'üü•',
    'Firebase': 'üî•',
    'Supabase': '‚ö°',
    
    // Outils & DevOps
    'Git': 'üìù',
    'GitHub': 'üêô',
    'GitLab': 'ü¶ä',
    'Docker': 'üê≥',
    'Kubernetes': '‚ò∏Ô∏è',
    'AWS': '‚òÅÔ∏è',
    'Azure': '‚òÅÔ∏è',
    'GCP': '‚òÅÔ∏è',
    'Vercel': '‚ñ≤',
    'Netlify': 'üåê',
    
    // Game Development
    'Unity': 'üéÆ',
    'Unreal': 'üéÆ',
    'Pygame': 'üêç',
    'Godot': 'üéØ',
    
    // Mobile
    'React Native': 'üì±',
    'Flutter': 'üíô',
    'Ionic': '‚ö°',
    'Xamarin': 'üî∑',
    
    // Design & UI
    'Figma': 'üé®',
    'Adobe XD': 'üé®',
    'Sketch': 'üíé',
    'Photoshop': 'üé®',
    'Illustrator': 'üé®',
    
    // Testing
    'Jest': 'üÉè',
    'Cypress': 'üå≤',
    'Selenium': 'üîç',
    'Playwright': 'üé≠',
    
    // Autres
    'Linux': 'üêß',
    'Windows': 'ü™ü',
    'macOS': 'üçé',
    'VS Code': 'üíô',
    'IntelliJ': 'üß†',
    'Webpack': 'üì¶',
    'Babel': 'üóº',
    'ESLint': 'üîç',
    'Prettier': '‚ú®',
    'SASS': 'üé®',
    'SCSS': 'üé®',
    'Tailwind': 'üí®',
    'Bootstrap': 'üÖ±Ô∏è',
    'Material-UI': 'üé®',
    'Ant Design': 'üêú',
    
    // Formats & Protocoles
    'JSON': 'üìã',
    'XML': 'üìÑ',
    'GraphQL': 'üîó',
    'REST': 'üåê',
    'WebSocket': 'üîå',
    'gRPC': '‚ö°',
    
    // AI & ML
    'TensorFlow': 'üß†',
    'PyTorch': 'üî•',
    'Scikit-learn': 'üìä',
    'OpenCV': 'üëÅÔ∏è',
    'Pandas': 'üêº',
    'NumPy': 'üî¢',
    
    // CMS & E-commerce
    'WordPress': 'üìù',
    'Drupal': 'üíß',
    'Strapi': 'üöÄ',
    'Shopify': 'üõí',
    'WooCommerce': 'üõí',
    
    // Game Engines & Frameworks sp√©cifiques
    'JavaFX': '‚òï',
    'Tkinter': 'üñºÔ∏è',
    'Qt': 'üî∑',
    'Electron': '‚öõÔ∏è',
    'Tauri': 'ü¶Ä',
  };
  
  return techIcons[tech] || 'üíª'; // Ic√¥ne par d√©faut
};

const ProjectDetailsPage: React.FC = () => {
  const { projectId } = useParams<{ projectId: string }>();
  const navigate = useNavigate();
  const project = projectsData.find(p => p.id === Number(projectId));

  if (!project) {
    return (
      <div className="project-details-page">
        <div className="project-container">
          <div className="error-state">
            <div className="error-icon">404</div>
            <h2>Projet non trouv√©</h2>
            <p>Le projet que vous recherchez n'existe pas ou a √©t√© supprim√©.</p>
            <button className="btn-back" onClick={() => navigate('/projects')}>
              ‚Üê Retour aux projets
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="project-details-page">
      <div className="project-container">
        <div className="project-header">
          <button className="btn-back" onClick={() => navigate('/projects')}>
            ‚Üê Retour aux projets
          </button>
          <div className="project-title-section">
            <span className="section-label">Projet</span>
            <h1 className="project-title">{project.title}</h1>
            <p className="project-short-desc">{project.short_description}</p>
          </div>
        </div>

        <div className="project-content">
          <div className="project-main">
            <div className="project-overview">
              <h2>Aper√ßu du projet</h2>
              <p className="project-description">{project.long_description}</p>
            </div>

            <div className="project-technologies">
              <h3>Technologies utilis√©es</h3>
              <div className="tech-grid">
                {project.technologies.map((tech) => (
                  <span key={tech} className="tech-badge">
                    <span className="tech-icon">{getTechIcon(tech)}</span>
                    <span className="tech-name">{tech}</span>
                  </span>
                ))}
              </div>
            </div>

            {project.tags && project.tags.length > 0 && (
              <div className="project-tags">
                <h3>Cat√©gories</h3>
                <div className="tags-list">
                  {project.tags.map((tag) => (
                    <span key={tag} className="tag-item">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            )}
          </div>

          <div className="project-sidebar">
            <div className="project-actions">
              <h3>Liens du projet</h3>
              <div className="action-buttons">
                {project.sourceCodeUrl && (
                  <a 
                    href={project.sourceCodeUrl} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="btn-action btn-source"
                  >                  <span className="btn-icon">üìÇ</span>
                  Code Source
                    <span className="btn-external">‚Üó</span>
                  </a>
                )}
                {project.liveDemoUrl && (
                  <a 
                    href={project.liveDemoUrl} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="btn-action btn-demo"
                  >
                  <span className="btn-icon">üöÄ</span>
                  D√©mo Live
                    <span className="btn-external">‚Üó</span>
                  </a>
                )}
              </div>
            </div>

            <div className="project-images">
              <h3>Galerie</h3>
              {project.images && project.images.length > 0 ? (
                <div className="images-grid">
                  {project.images.map((image) => (
                    <div key={image} className="image-item">
                      <img src={image} alt={`${project.title} capture`} />
                    </div>
                  ))}
                </div>
              ) : (
                <div className="project-image-placeholder">
                  <div className="placeholder-content">
                    <span className="placeholder-icon">{project.title.charAt(0)}</span>
                    <p>Captures d'√©cran √† venir</p>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProjectDetailsPage;
